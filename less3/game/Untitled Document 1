Sound::Manager
-init audiodevice
-parametres для audiospec
		samples = 1024 будет лучше работать, быстрее
		channels = 2!
		callback;
	mutex как атомик только для векторов
	проверка релевантности данных и удаление
	если играет то нужно взять buffer и amount и смешать
	(для лупинга)
mixSound(audiocallback нюанс формат звука идет всрато нужно не через микс а руками SDL_Mix...* на коэффициент баланса
												 реализация функции микс и подправить для созд баланса)
atomic<size_t> current_pos = 0; (struct buffer) переменные которые могут поменяться это делается для безопасности неделимая
enum state {playing, paused}
createSound
{return srd::ptr}

Sound::Sound
play()
createSound(mutex)
pause()
stop()
setVol(добавить как параметр в саунд последн параметр в миксе это *вол(громкость в процентах))
looping(смещаем вначало или стоп)
через current pos
mix audiocallback в одном потоке а нужно добавить muteх
openfile + проверка 
~деструктор



звук выстрела в танке констуркторе?

улучшения в движке
кеш текстур как шейдеры не креэйт текстур а геттекстур если есть в мапе,хранить мапу вик поинтеров (как со звуком)
в битмапе есть вектор чаров есть проблема что создается лишнее копирование если есть функция 
		решение struct arrayView getData()лямбда; getSize()лямбда; array view has three режима работы полное владение как вектор
												невладение аналог стрингвьев
												автоматическое освобождение почти то же самое что в предыдущем но с 																			функцией удаления
												хранение данных(контейнера) в лямбде
												freeFunc()
~деструктор


struct color{
vec4 <rgba> передача цвета в шейдер = uint32_t rgba	
std::uint32 rgba
set
	проверка дипазона 
get											
}										

GUI
class button : node
через битмап передать тектуру
setscale(0,8) при нажатии шоб меньше становилась
передаем в констурктор кнопки лямбду в лямбду еще state(pressed !pressed)
движение клавиши если кнопка уже не нажата, но на мышке зажата
ImGui lib интерфейс неумеющий рисовать
Каждый кадр это дерево юай должен вызываться код
нужно вызвать функцию созд тестовый юай showdemowind
mousepos windsize events need to be given to GUI каждый кадр нужно сообщать юи где и что
у него есть текстурдата и ею нужнорисовать весь юи и выгружать оттуда
MGUI дает два указателя Vertex vec2(pos) vec2(text coord) vec4(color) и список команд
грузим все это в гпю 
еще есть микрокоманды count vertex to draw, scis хз, texture(fuck it) 
задача отрисовать только от н до чего то
gldrawelements(последний элемент это оно)
scissor позволяет задать обрасть где будет отрисовка в остальной части ничего нет перед каждой отрисовки есть область и ее надо задавать там

шейдеры переделать на поддержку layout в вертекс баферы добавить 
дз
шейдерный и текстурный кеш и кнопка	
добавить scissor
num, pos добавить отрисовку
подключить ingui in cmake
что то что написано на лоске
добавить в ноду поле zorder порядок чайлдов если отриц то под текущей + над vizit change when zorder<0 vector child must be sorted with zorder

текстурный и шейдерный
	
	
	
	
	
	
	
	
	
	
	
	
	
все перенести в аудиоменеджер все саунды	
	mutex
	thread 1 thread 2
	tank1	 tank2
	func1(lock чтото) func2
	блокирует один поток
	
RenderDraw без параметров
vb draw(pos count)
scissor in renderer

class uimanager в engine
()
visit()
render() туда отправляем конечные данные	
scene visit и туда же
uivisit
	
	
	
	
	
	
	
	
	
	
	
	

